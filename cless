#! /usr/bin/ruby

$: << File.join(File.dirname($0), "lib")

require 'ncurses'
require 'mmap'
require 'cless'

# Move around the file descriptor if not a tty!
if !$stdout.tty?
  $stderr.puts("Works only on terminals!")
  exit(1)
end
if !$stdin.tty?
  # Better way to get a file descriptor to reopen
  # dup anyone?
  stdin, w = IO.pipe    
  w.close
  stdin.reopen($stdin)
  $stdin.reopen($stdout)
end

if ARGV[0]
  ptr = Mmap.new(ARGV[0])
else
  ptr = MappedStream.new(stdin)
end
data = MapData.new(ptr)

curses_init
at_exit { curses_close }

$log = File.open("log", "w")
$log.sync = true

begin
  loop do
    display_lines(data)
    Ncurses.move(Ncurses.stdscr.getmaxy-1, 0)
    Ncurses.addstr(data.debug)
    wait_for_key(data) or break
  end
rescue Exception => e
  Ncurses.endwin
  puts("#{e.message} (#{e.class}): #{e.backtrace.join("\n")}")
end
